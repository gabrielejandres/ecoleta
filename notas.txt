** Nodejs ** 

// Rota: endereço completo da requisição
// Recurso: Qual entidade estamos acessando do sistema

/* Tipos de parâmetros */
// Request Params: Parâmetros que vem na própria rota que identificam um recurso
// Query Param: Parâmetros que vem na própria rota geralmente opcionais para filtros, paginação
// Request Body: Parâmetros para criação e atualização de informações

Exemplos:
// query params
app.get('/users', (request, response) => {
    const search = String(request.query.search);

    const filteredUsers = search ? users.filter(user => user.includes(search)) : users;

    response.json(filteredUsers);
});

// request params
app.get('/users/:id', (request, response) => {
    const id = Number(request.params.id);

    const user = users[id];

    return response.json(user);
});

// request body
app.post('/users', (request, response) => {
    const data = request.body;
    const user = {
        name: data.name,
        email: data.email,
    };

    return response.json(user);
});

/* Entidades */
points: pontos de coleta
	->image
	->name
	->email
	->whatsapp
	->latitude
	->longitude
	->city
	->uf

items: itens para coleta
	-> title
	-> image
point_items: pivot que armazena o relacionamento
	-> point_id
	-> item_id

/* Migrations */
Histórico do banco de dados
Migrations determinam o que será feito no projeto: criação de tabelas, alteração, deleção, etc

/* Funcionalidades */
Cadastro de ponto de coleta
Listar itens de coleta
Listar pontos de coleta (filtro por cidade, estado e itens)
Listar um ponto de coleta específico

/* Padrão nomes de métodos */
index: listagem
show: exibir um único registro
create: criar registro
update: atualizar registro
delete: deletar registro